{"ast":null,"code":"var _jsxFileName = \"/Users/kennethchong/Documents/GitHub/react_development/redux--01-start/src/containers/Counter/Counter.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CounterControl from '../../components/CounterControl/CounterControl';\nimport CounterOutput from '../../components/CounterOutput/CounterOutput';\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counter: 0\n    };\n\n    this.counterChangedHandler = (action, value) => {\n      switch (action) {\n        case 'inc':\n          this.setState(prevState => {\n            return {\n              counter: prevState.counter + 1\n            };\n          });\n          break;\n\n        case 'dec':\n          this.setState(prevState => {\n            return {\n              counter: prevState.counter - 1\n            };\n          });\n          break;\n\n        case 'add':\n          this.setState(prevState => {\n            return {\n              counter: prevState.counter + value\n            };\n          });\n          break;\n\n        case 'sub':\n          this.setState(prevState => {\n            return {\n              counter: prevState.counter - value\n            };\n          });\n          break;\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CounterOutput, {\n      value: this.props.ctr,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CounterControl, {\n      label: \"Increment\",\n      clicked: this.props.onIncrementCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CounterControl, {\n      label: \"Decrement\",\n      clicked: this.props.onDecrementCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CounterControl, {\n      label: \"Add 5\",\n      clicked: this.props.onAddCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CounterControl, {\n      label: \"Subtract 5\",\n      clicked: this.props.onSubtractCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.onStoreResult,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"Store Result\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      onClick: this.props.onDeleteResult,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    })));\n  }\n\n} //state.counter and state.results must match with reducer\n\n\nconst mapStateToProps = state => {\n  return {\n    ctr: state.counter,\n    storedResults: state.results\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIncrementCounter: () => {\n      return dispatch({\n        type: 'INCREMENT'\n      });\n    },\n    onDecrementCounter: () => dispatch({\n      type: 'DECREMENT'\n    }),\n    onAddCounter: () => dispatch({\n      type: 'ADD',\n      val: 10\n    }),\n    onSubtractCounter: () => dispatch({\n      type: 'SUBTRACT',\n      val: 15\n    }),\n    onStoreResult: () => dispatch({\n      type: 'STORE_RESULT'\n    }),\n    onDeleteResult: () => dispatch({\n      type: 'DELETE_RESULT'\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","map":{"version":3,"sources":["/Users/kennethchong/Documents/GitHub/react_development/redux--01-start/src/containers/Counter/Counter.js"],"names":["React","Component","connect","CounterControl","CounterOutput","Counter","state","counter","counterChangedHandler","action","value","setState","prevState","render","props","ctr","onIncrementCounter","onDecrementCounter","onAddCounter","onSubtractCounter","onStoreResult","onDeleteResult","mapStateToProps","storedResults","results","mapDispatchToProps","dispatch","type","val"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport CounterControl from '../../components/CounterControl/CounterControl';\nimport CounterOutput from '../../components/CounterOutput/CounterOutput';\n\nclass Counter extends Component {\n    state = {\n        counter: 0\n    }\n\n    counterChangedHandler = ( action, value ) => {\n        switch ( action ) {\n            case 'inc':\n                this.setState( ( prevState ) => { return { counter: prevState.counter + 1 } } )\n                break;\n            case 'dec':\n                this.setState( ( prevState ) => { return { counter: prevState.counter - 1 } } )\n                break;\n            case 'add':\n                this.setState( ( prevState ) => { return { counter: prevState.counter + value } } )\n                break;\n            case 'sub':\n                this.setState( ( prevState ) => { return { counter: prevState.counter - value } } )\n                break;\n        }\n    }\n\n    render () {\n        return (\n            <div>\n                <CounterOutput value={this.props.ctr} />\n                <CounterControl label=\"Increment\" clicked={this.props.onIncrementCounter} />\n                <CounterControl label=\"Decrement\" clicked={this.props.onDecrementCounter}  />\n                <CounterControl label=\"Add 5\" clicked={this.props.onAddCounter}  />\n                <CounterControl label=\"Subtract 5\" clicked={this.props.onSubtractCounter}  />\n                <hr/>\n                <button onClick={this.props.onStoreResult}>Store Result</button>\n                <ul>\n                    <li onClick={this.props.onDeleteResult}></li>\n                </ul>\n            </div>\n        );\n    }\n}\n\n//state.counter and state.results must match with reducer\nconst mapStateToProps = state => {\n    return {\n        ctr: state.counter,\n        storedResults: state.results\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIncrementCounter: () => {\n            return (\n                dispatch({type: 'INCREMENT'})\n            )\n        },\n        onDecrementCounter: () => dispatch({type: 'DECREMENT'}),\n        onAddCounter: () => dispatch({ type: 'ADD', val: 10 }),\n        onSubtractCounter: () => dispatch({ type: 'SUBTRACT', val: 15 }),\n        onStoreResult: () => dispatch({type: 'STORE_RESULT'}),\n        onDeleteResult: () => dispatch({ type: 'DELETE_RESULT' }),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);"]},"metadata":{},"sourceType":"module"}