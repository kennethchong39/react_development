{"ast":null,"code":"const initialState = {\n  counter: 0,\n  results: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return { ...state,\n        counter: state.counter + 1\n      };\n\n    case 'DECREMENT':\n      return { ...state,\n        counter: state.counter - 1\n      };\n\n    case 'ADD':\n      return { ...state,\n        counter: state.counter + action.val\n      };\n\n    case 'SUBTRACT':\n      return { ...state,\n        counter: state.counter - action.val\n      };\n\n    case 'STORE_RESULT':\n      return { ...state,\n        results: state.results.concat({\n          id: new Date(),\n          value: state.counter\n        })\n      };\n\n    case 'STORE_RESULT':\n      return { ...state,\n        results: state.results.concat(state.counter)\n      };\n\n    case 'DELETE_RESULT':\n      const newArray = [...state.result];\n      newArray.splice(id, 1);\n      return { ...state,\n        results: newArray\n      };\n  }\n\n  return state;\n};\n\nexport default reducer; // const reducer = (state = initialState, action) => {\n//     if (action.type === 'INCREMENT') {\n//         return {\n//             ...state,\n//             counter: state.counter + 1\n//         }\n//     }\n//     if (action.type === 'DECREMENT') {\n//         return {\n//             ...state,\n//             counter: state.counter - 1\n//         }\n//     }\n//     if (action.type === 'ADD') {\n//         return {\n//             ...state,\n//             counter: state.counter + action.val\n//         }\n//     }\n//     if (action.type === 'SUBTRACT') {\n//         return {\n//             ...state,\n//             counter: state.counter - action.val\n//         }\n//     }\n//     return state;\n// }","map":{"version":3,"sources":["/Users/kennethchong/Documents/GitHub/react_development/redux--01-start/src/store/reducer.js"],"names":["initialState","counter","results","reducer","state","action","type","val","concat","id","Date","value","newArray","result","splice"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,CADQ;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB;AAFtB,OAAP;;AAIJ,SAAK,WAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB;AAFtB,OAAP;;AAIJ,SAAK,KAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACE;AAF7B,OAAP;;AAIJ,SAAK,UAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACE;AAF7B,OAAP;;AAIJ,SAAK,cAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcM,MAAd,CAAqB;AAACC,UAAAA,EAAE,EAAE,IAAIC,IAAJ,EAAL;AAAiBC,UAAAA,KAAK,EAAEP,KAAK,CAACH;AAA9B,SAArB;AAFN,OAAP;;AAIJ,SAAK,cAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcM,MAAd,CAAqBJ,KAAK,CAACH,OAA3B;AAFN,OAAP;;AAIJ,SAAK,eAAL;AACI,YAAMW,QAAQ,GAAG,CAAC,GAAGR,KAAK,CAACS,MAAV,CAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgBL,EAAhB,EAAmB,CAAnB;AACA,aAAO,EACH,GAAGL,KADA;AAEHF,QAAAA,OAAO,EAAEU;AAFN,OAAP;AAlCR;;AAuCA,SAAOR,KAAP;AACH,CAzCD;;AA0CA,eAAeD,OAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["const initialState = {\n    counter: 0,\n    results: []\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'INCREMENT' : \n            return {\n                ...state,\n                counter: state.counter + 1\n            }\n        case 'DECREMENT':\n            return {\n                ...state,\n                counter: state.counter - 1\n            }\n        case 'ADD':\n            return {\n                ...state,\n                counter: state.counter + action.val\n            }\n        case 'SUBTRACT':\n            return {\n                ...state,\n                counter: state.counter - action.val\n            }\n        case 'STORE_RESULT': \n            return {\n                ...state,\n                results: state.results.concat({id: new Date(), value: state.counter})\n            } \n        case 'STORE_RESULT':\n            return {\n                ...state,\n                results: state.results.concat(state.counter)\n            } \n        case 'DELETE_RESULT' :\n            const newArray = [...state.result];\n            newArray.splice(id,1);\n            return {\n                ...state,\n                results: newArray \n            }\n    }\n    return state; \n}\nexport default reducer;\n\n// const reducer = (state = initialState, action) => {\n//     if (action.type === 'INCREMENT') {\n//         return {\n//             ...state,\n//             counter: state.counter + 1\n//         }\n//     }\n//     if (action.type === 'DECREMENT') {\n//         return {\n//             ...state,\n//             counter: state.counter - 1\n//         }\n//     }\n//     if (action.type === 'ADD') {\n//         return {\n//             ...state,\n//             counter: state.counter + action.val\n//         }\n//     }\n//     if (action.type === 'SUBTRACT') {\n//         return {\n//             ...state,\n//             counter: state.counter - action.val\n//         }\n//     }\n//     return state;\n// }"]},"metadata":{},"sourceType":"module"}